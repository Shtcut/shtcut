name: Build App

on:
  workflow_call:
    secrets:
      CI_SECRET:
        description: 'Secret for CI'
    inputs:
      project:
        required: true
        type: string
      service:
        required: true
        type: string
      dockerfile:
        required: true
        type: string
      buildCommand:
        type: string
      unitTestCommand:
        type: string
      e2eTestCommand:
        type: string

jobs:
  build-ci:
    name: 'Build CI'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        if: ${{ inputs.buildCommand }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install dependencies
        if: ${{ inputs.buildCommand }}
        working-directory: ./backend
        run: |
          if [ -e yarn.lock ]; then
          yarn install --frozen-lockfile
          elif [ -e package-lock.json ]; then
          npm ci
          else
          npm i
          fi
      - name: Build App
        run: ${{ inputs.buildCommand }}

      - name: Run Unit Test
        if: ${{ inputs.unitTestCommand }}
        run: ${{ inputs.unitTestCommand }}

      - name: Run e2e Test
        if: ${{ inputs.e2eTestCommand }}
        run: |
          echo ${{ secrets.CI_SECRET }} | base64 -d > .env
          source .env
          cat .env
          ${{ inputs.e2eTestCommand }}

  docker:
    name: 'Docker build'
    runs-on: ubuntu-latest
    needs: [build-ci]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - run: docker build -t ${{ inputs.project }}-${{ inputs.service }}-api -f ${{ inputs.dockerfile }} ./
