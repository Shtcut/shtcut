name: CI FLOW

on:
  workflow_call:
    secrets:
      AWS_ACCESS_KEY_ID:
        description: 'AWS Access Key ID'
        required: true
      AWS_SECRET_ACCESS_KEY:
        description: 'AWS Secret Access Key'
        required: true
      AWS_DEFAULT_REGION:
        description: 'AWS Default Region'
        required: true
      GH_CUSTOM_TOKEN:
        description: 'GitHub Custom Token'
        required: true
      CI_SECRET:
        description: 'CI Secret'
        required: false
    inputs:
      is_workflow:
        required: true
        type: boolean
        default: false
      owner:
        required: true
        type: boolean
      service:
        required: true
        type: string
      name:
        required: true
        type: string
      project:
        required: true
        type: string
      region:
        required: true
        type: string
      repository:
        required: true
        type: string
      instance_type:
        type: string
      hostname-format:
        required: true
        type: string
      environment:
        required: true
        type: string
      namespace:
        required: true
        type: string
      port:
        required: true
        type: string
      dockerfile:
        required: true
        type: string
      probe_url:
        type: string
      buildCommand:
        type: string
      unitCommand:
        type: string
      e2eTestCommand:
        type: string
      app_secret:
        type: string

permissions:
  id-token: write
  contents: read


jobs:
  info:
    name: CI workflow for ${{ inputs.service }}
    runs-on: ubuntu-latest
    steps:
      - name: Initialize environment
        run: |
          echo "Service name : ${{ inputs.service }}"
  changes:
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'push' }}
    runs-on: ubuntu-latest
    needs: [ info ]
    name: Test changes-files for ${{ inputs.service }}
    outputs:
      file-changes: ${{ steps.changed-files.outputs.any_changed}}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: List changed files
        run: |
          for file in ${{ steps.changed-file.outputs.all_changed_files }}; do
            echo "$file was changed"
          done
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v35
        with:
          files: |
            apps/${{ inputs.namespace }}-${{ inputs.name }}/**
            .github/workflows/**
            libs/**
            config/**
            docker/${{ inputs.name}}/**
            **.json
            **.js

      - name: Run step if any file(s) in the docs folder changed
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          echo "One or more files in the docs folder has changed."
          echo "List all the files that have changed: ${{ steps.changed-files.outputs.all_changed_files }}"

  build:
    name: "Build"
    permissions: write-all
    needs: [ changes ]
    uses: shtcut/devops/.github/workflows/build.yaml@develop
    with:
      project: ${{ inputs.project }}
      dockerfile: ${{ inputs.dockerfile }}
      buildCommand: ${{ inputs.buildCommand }}
      unitTestCommand: ${{ inputs.unitTestCommand }}
      e2eTestCommand: ${{ inputs.e2eTestCommand }}
    secrets:
      CI_SECRET: ${{ secrets.CI_SECRET }}
  setups:
    name: "Devops"
    runs-on: ubuntu-latest
    needs: [ build, info ]
    steps:
      - name: Clone Devops repository
        uses: GuillaumeFalourd/clone-github-repo-action@v2
        with:
          owner: ${{ inputs.owner }}
          repository: ${{ inputs.repository }}
          access-token: ${{ secrets.GH_CUSTOM_TOKEN }}
      - name: Check file existence
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: ${{ inputs.repository }}
      - name: Upload Repo to Artifact
        uses: actions/upload-artifact@v3
        with:
          name: cloud-scripts
          path: ${{ inputs.repository }}
  ci:
    name: "CI"
    permissions: write-all
    needs: [ setups ]
    uses: shtcut/devops/.github/workflows/ci.yaml@develop

